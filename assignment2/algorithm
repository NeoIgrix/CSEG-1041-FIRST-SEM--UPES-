1). Start

2). Input: Get the positive integer N.

3). Handle special cases:

    > If N is less than or equal to 1, it's not prime. Output "Not Prime" and stop.

    > If N is equal to 2, it's the only even prime number. Output "Prime" and stop.


4). If N is an even number (i.e., N % 2 == 0), it's not prime. Output "Not Prime" and stop. This step helps optimize the process by skipping all even numbers greater than 2.

5). Initialize a loop counter, i, starting from 3.

6).The loop should continue as long as i * i is less than or equal to N. This is an important optimization because any          composite number N must have at least one prime factor less than or equal to its square root.     * Inside the loop, check if N is divisible by i (i.e., N % i == 0).

7).If it is divisible, then N is not prime. Output "Not Prime" and stop.

8).Increment the loop counter i by 2 in each step (i = i + 2) to check only odd divisors.

9). If the loop completes without finding any divisors, then N must be a prime number.  Output "Prime" 

10).stop.

